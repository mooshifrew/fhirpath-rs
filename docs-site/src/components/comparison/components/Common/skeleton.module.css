/**
 * Skeleton Loading Styles
 * Modern skeleton screens with smooth animations and proper theming
 */

/* Base skeleton container */
.skeletonContainer {
  width: 100%;
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Hero skeleton specific styles */
.heroSkeleton {
  background: linear-gradient(135deg, var(--mantine-color-surface) 0%, var(--mantine-color-surface-secondary) 100%);
  border: 1px solid var(--mantine-color-border);
  border-radius: 0.75rem;
  padding: 3rem 2rem;
  margin-bottom: 2rem;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.heroSkeleton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Metrics skeleton styles */
.metricSkeleton {
  background: var(--mantine-color-surface);
  border: 1px solid var(--mantine-color-border);
  border-radius: 0.75rem;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.metricSkeleton:hover {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  transform: translateY(-1px);
}

.metricSkeleton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.05),
    transparent
  );
  animation: shimmer 2.5s infinite;
}

/* Chart skeleton styles */
.chartSkeleton {
  background: var(--mantine-color-surface);
  border: 1px solid var(--mantine-color-border);
  border-radius: 0.75rem;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.chartArea {
  min-height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  background: var(--mantine-color-surface-secondary);
  border-radius: 0.5rem;
  margin: 1rem 0;
  position: relative;
}

.chartArea::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.03),
    transparent
  );
  animation: shimmer 3s infinite;
}

/* Table skeleton styles */
.tableSkeleton {
  background: var(--mantine-color-surface);
  border: 1px solid var(--mantine-color-border);
  border-radius: 0.75rem;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  position: relative;
  overflow: hidden;
}

.tableSkeleton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.04),
    transparent
  );
  animation: shimmer 2.8s infinite;
}

/* Card skeleton styles */
.cardSkeleton {
  background: var(--mantine-color-surface);
  border: 1px solid var(--mantine-color-border);
  border-radius: 0.75rem;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.cardSkeleton:hover {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  transform: translateY(-1px);
}

.cardSkeleton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.06),
    transparent
  );
  animation: shimmer 2.2s infinite;
}

/* Staggered animation for multiple skeleton items */
.skeletonContainer > * {
  animation: fadeInStagger 0.4s ease-in-out;
}

.skeletonContainer > *:nth-child(1) { animation-delay: 0s; }
.skeletonContainer > *:nth-child(2) { animation-delay: 0.1s; }
.skeletonContainer > *:nth-child(3) { animation-delay: 0.2s; }
.skeletonContainer > *:nth-child(4) { animation-delay: 0.3s; }
.skeletonContainer > *:nth-child(5) { animation-delay: 0.4s; }
.skeletonContainer > *:nth-child(6) { animation-delay: 0.5s; }

@keyframes fadeInStagger {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Pulse animation for skeleton elements */
.skeletonContainer :global(.mantine-Skeleton-root) {
  background: linear-gradient(
    90deg,
    var(--mantine-color-surface-secondary) 25%,
    var(--mantine-color-border-light) 50%,
    var(--mantine-color-surface-secondary) 75%
  );
  background-size: 200% 100%;
  animation: skeletonPulse 1.5s ease-in-out infinite;
}

@keyframes skeletonPulse {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .heroSkeleton {
    padding: 2rem 1.5rem;
  }

  .chartArea {
    min-height: 250px;
    padding: 1.5rem;
  }
}

@media (max-width: 480px) {
  .heroSkeleton {
    padding: 1.5rem 1rem;
  }

  .chartArea {
    min-height: 200px;
    padding: 1rem;
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .heroSkeleton::before,
  .metricSkeleton::before,
  .chartArea::before,
  .tableSkeleton::before,
  .cardSkeleton::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.02),
      transparent
    );
  }

  .skeletonContainer :global(.mantine-Skeleton-root) {
    background: linear-gradient(
      90deg,
      var(--mantine-color-surface-secondary) 25%,
      var(--mantine-color-border) 50%,
      var(--mantine-color-surface-secondary) 75%
    );
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .skeletonContainer,
  .heroSkeleton::before,
  .metricSkeleton::before,
  .chartArea::before,
  .tableSkeleton::before,
  .cardSkeleton::before,
  .skeletonContainer > *,
  .skeletonContainer :global(.mantine-Skeleton-root) {
    animation: none;
  }

  .skeletonContainer {
    opacity: 1;
    transform: none;
  }

  .skeletonContainer > * {
    opacity: 1;
    transform: none;
  }
}
